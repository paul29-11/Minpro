@using MinPro.viewmodels
@model VMTblProfile

@{
    ViewData["Title"] = "Masukkan Password Baru";
}

<div class="card">
    <div class="card-body">
        <div class="card-title">@ViewData["Title"]</div>
        <form asp-action="SureEditP" method="post" id="form_input">
            <input type="hidden" class="form-control" id="Id" name="Id" value="@Model.Id">

            <div class="form-group">
                <div class="input-group">
                    <input type="password" class="form-control" id="Password" name="Password" placeholder="New Password" onchange="checkNewPasswordMatch()">
                    <div class="input-group-append">
                        <button type="button" class="btn btn-outline-secondary" onmousedown="togglePasswordVisibility()" onmouseup="resetPasswordButton()">
                            <span id="passwordIcon" class="fa fa-eye-slash"></span>
                        </button>
                    </div>
                </div>
                <span id="error_Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="input-group">
                    <input type="password" class="form-control" id="re_password" name="re_password" placeholder="Retype password" onchange="checkNewPasswordMatch()">
                    <div class="input-group-append">
                        <button type="button" class="btn btn-outline-secondary" onmousedown="toggleRePasswordVisibility()" onmouseup="resetRePasswordButton()">
                            <span id="passwordIcon" class="fa fa-eye-slash"></span>
                        </button>
                    </div>
                </div>
                <span id="error_re_password" class="text-danger"></span>
            </div>

            <div class="form-group row">
                <div class="col-sm-10">
                    <button type="submit" class="btn btn-primary">Input</button>
                    <a class="btn btn-dark" asp-controller="Profile" asp-action="Index">Back</a>
                </div>
            </div>
        </form>
    </div>
</div>

<script>

    var passwordVisible = false;
    var rePasswordVisible = false;

    function togglePasswordVisibility() {
        passwordVisible = !passwordVisible;
        var passwordInput = $("#Password");
        var passwordIcon = $("#passwordIcon");

        if (passwordVisible) {
            passwordInput.attr("type", "text");
            passwordIcon.removeClass("fa-eye-slash");
            passwordIcon.addClass("fa-eye");
        } else {
            passwordInput.attr("type", "password");
            passwordIcon.removeClass("fa-eye");
            passwordIcon.addClass("fa-eye-slash");
        }
    }

    function toggleRePasswordVisibility() {
        rePasswordVisible = !rePasswordVisible;
        var rePasswordInput = $("#re_password");
        var rePasswordIcon = $("#rePasswordIcon");

        if (rePasswordVisible) {
            rePasswordInput.attr("type", "text");
            rePasswordIcon.removeClass("fa-eye-slash");
            rePasswordIcon.addClass("fa-eye");
        } else {
            rePasswordInput.attr("type", "password");
            rePasswordIcon.removeClass("fa-eye");
            rePasswordIcon.addClass("fa-eye-slash");
        }
    }

    function resetPasswordButton() {
        // Reset password visibility when the mouse button is released
        passwordVisible = false;
        var passwordInput = $("#Password");
        var passwordIcon = $("#passwordIcon");
        passwordInput.attr("type", "password");
        passwordIcon.removeClass("fa-eye");
        passwordIcon.addClass("fa-eye-slash");
    }

    function resetRePasswordButton() {
        // Reset retype password visibility when the mouse button is released
        rePasswordVisible = false;
        var rePasswordInput = $("#re_password");
        var rePasswordIcon = $("#rePasswordIcon");
        rePasswordInput.attr("type", "password");
        rePasswordIcon.removeClass("fa-eye");
        rePasswordIcon.addClass("fa-eye-slash");
    }

$("#form_input").validate({
        errorClass: "text-danger",
        errorPlacement: function (error, element) {
            if (element.attr("name") === "Password") {
                error.appendTo($("#error_Password"));
            } else if (element.attr("name") === "re_password") {
                error.appendTo($("#error_re_password"));
            } else {
            }
        },
        rules: {
            Password: {
                required: true,
                minlength: 8, // Minimum password length should be 8 characters
                // Custom validation method to check if the password contains at least one lowercase, one uppercase, and one special character
                strongPassword: true
            },
            re_password: {
                equalTo: "#Password" // Ensure that the re_password field matches the Password field
            }
        },
        messages: {
            Password: {
                required: "Please enter a password",
                minlength: "Password must be at least 8 characters long"
            },
            re_password: {
                equalTo: "Passwords Tidak Sama"
            }
        },
        submitHandler: function (form) {
            var dataForm = $(form).serialize();
            submitPasswordChange(dataForm);
        }
    });

    // Custom validation method to check if the password contains at least one lowercase, one uppercase, and one special character
    $.validator.addMethod("strongPassword", function (value, element) {
        return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$,.\s!%*?&])[A-Za-z\d@@$,.\s!%*?&]{8,}$/.test(value);
    }, "Harap Menggunakan huruf Besar,Kecil,Digit dan Special(@@$!%*?&)");



    // Function to handle the form submission for SureEditP
    function submitPasswordChange(dataParam) {
        $.ajax({
            url: '/Profile/SureEditP',
            type: "post",
            data: dataParam,
            dataType: "json",
            success: function (respon) {
                var data = respon.dataRespon;
                if (data.success) {
                    $("#modal_sm").modal("hide");
                    toastr.success(
                        data.message,
                        '',
                        {
                            timeOut: 500,
                            fadeOut: 500,
                            onHidden: function () {
                                window.location.reload();
                            }
                        }
                    );
                }
                else {
                    // Use toastr.error to display the error message
                    toastr.error(data.message);
                }
            }
        });
    }
</script>
